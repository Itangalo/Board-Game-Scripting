// Returns a random value between 1 and 6 (inclusive).
function rollADie() {
  let result = Math.floor(Math.random()*6 + 1);
  return result;
}

// Rolls the given number of dice and returns the results in an array.
function rollSomeDie(numberOfDice) {
  // Take care of some invalid input.
  if (numberOfDice < 1 || !numberOfDice) {
    numberOfDice = 1;
  }

  let results = [];
  // Keep rolling until you've reached the specified number of dice.
  while (results.length < numberOfDice) {
    results.push(rollADie());
  }
  return results;
}

// Returns the highest number of equal dice, in the array of provided dice results.
function countEquals(dice) {
  // An array that keeps track of how many 1's, 2's and so on that we have.
  let counter = [0, 0, 0, 0, 0, 0];

  // Check each die result and increase the proper place in the counter array.
  for (let i in dice) {
    let result = dice[i];
    counter[result-1]++;
  }

  // Find the maximum value in the counter array.
  let max = 0;
  for (let i in counter) {
    max = Math.max(max, counter[i]);
//    if (counter[i] > max) {
//      max = counter[i];
//    }
  }

  return max;
}

// Simulates a large number of die rolls and returns the distribution of number of equals.
function simulateDiceRolls(numberOfDice) {
  let iterations = 10000;
  // Roll the specifiend number of dice a lot of times and record how many equals we
  // got in each roll.
  let result = [];
  for (let i = 0; i < iterations; i++) {
    let dice = rollSomeDie(numberOfDice);
    result.push(countEquals(dice));
  }

  // Sort the array NUMERICALLY. This is needed for getting the percentile distribution.
  result.sort(function(a, b) {
    return a - b;
  });

  // Build an array of percentile 0, 5, 10, 15, and so on. Return the result.
  let output = [];
  for (let p = 0; p <= 100; p = p + 5) {
    output.push(percentile(result, p / 100));
  }

  debugger;
  return output;
}


// Code taken from: https://gist.github.com/IceCreamYou/6ffa1b18c4c8f6aeaad2
// Returns the value at a given percentile in a sorted numeric array.
// "Linear interpolation between closest ranks" method
function percentile(arr, p) {
    if (arr.length === 0) return 0;
    if (typeof p !== 'number') throw new TypeError('p must be a number');
    if (p <= 0) return arr[0];
    if (p >= 1) return arr[arr.length - 1];

    var index = (arr.length - 1) * p,
        lower = Math.floor(index),
        upper = lower + 1,
        weight = index % 1;

    if (upper >= arr.length) return arr[lower];
    return arr[lower] * (1 - weight) + arr[upper] * weight;
}



function tmp() {
  let dice = simulateDiceRolls(20);
}
